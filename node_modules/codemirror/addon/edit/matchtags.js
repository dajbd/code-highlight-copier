!function(t){"object"==typeof exports&&"object"==typeof module?t(require("node_modules/codemirror/lib/codemirror.js"),require("node_modules/codemirror/addon/fold/xml-fold.js")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../fold/xml-fold"],t):t(CodeMirror)}(function(t){"use strict";function e(t){t.state.tagHit&&t.state.tagHit.clear(),t.state.tagOther&&t.state.tagOther.clear(),t.state.tagHit=t.state.tagOther=null}function o(o){o.state.failedTagMatch=!1,o.operation(function(){if(e(o),!o.somethingSelected()){var a=o.getCursor(),i=o.getViewport();i.from=Math.min(i.from,a.line),i.to=Math.max(a.line+1,i.to);var r=t.findMatchingTag(o,a,i);if(r){if(o.state.matchBothTags){var n="open"==r.at?r.open:r.close;n&&(o.state.tagHit=o.markText(n.from,n.to,{className:"CodeMirror-matchingtag"}))}var c="close"==r.at?r.open:r.close;c?o.state.tagOther=o.markText(c.from,c.to,{className:"CodeMirror-matchingtag"}):o.state.failedTagMatch=!0}}})}function a(t){t.state.failedTagMatch&&o(t)}t.defineOption("matchTags",!1,function(i,r,n){n&&n!=t.Init&&(i.off("cursorActivity",o),i.off("viewportChange",a),e(i)),r&&(i.state.matchBothTags="object"==typeof r&&r.bothTags,i.on("cursorActivity",o),i.on("viewportChange",a),o(i))}),t.commands.toMatchingTag=function(e){var o=t.findMatchingTag(e,e.getCursor());if(o){var a="close"==o.at?o.open:o.close;a&&e.extendSelection(a.to,a.from)}}});