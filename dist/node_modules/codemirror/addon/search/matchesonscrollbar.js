!function(t){"object"==typeof exports&&"object"==typeof module?t(require("node_modules/codemirror/lib/codemirror.js"),require("node_modules/codemirror/addon/search/searchcursor.js"),require("node_modules/codemirror/addon/scroll/annotatescrollbar.js")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","./searchcursor","../scroll/annotatescrollbar"],t):t(CodeMirror)}(function(t){"use strict";function e(t,e,o,i){this.cm=t,this.options=i;var a={listenForChanges:!1};for(var r in i)a[r]=i[r];a.className||(a.className="CodeMirror-search-match"),this.annotation=t.annotateScrollbar(a),this.query=e,this.caseFold=o,this.gap={from:t.firstLine(),to:t.lastLine()+1},this.matches=[],this.update=null,this.findMatches(),this.annotation.update(this.matches);var s=this;t.on("change",this.changeHandler=function(t,e){s.onChange(e)})}function o(t,e,o){return e>=t?t:Math.max(e,t+o)}t.defineExtension("showMatchesOnScrollbar",function(t,o,i){return"string"==typeof i&&(i={className:i}),i||(i={}),new e(this,t,o,i)});var i=1e3;e.prototype.findMatches=function(){if(this.gap){for(var e=0;e<this.matches.length;e++){var o=this.matches[e];if(o.from.line>=this.gap.to)break;o.to.line>=this.gap.from&&this.matches.splice(e--,1)}for(var a=this.cm.getSearchCursor(this.query,t.Pos(this.gap.from,0),this.caseFold),r=this.options&&this.options.maxMatches||i;a.findNext();){var o={from:a.from(),to:a.to()};if(o.from.line>=this.gap.to)break;if(this.matches.splice(e++,0,o),this.matches.length>r)break}this.gap=null}},e.prototype.onChange=function(e){var i=e.from.line,a=t.changeEnd(e).line,r=a-e.to.line;if(this.gap?(this.gap.from=Math.min(o(this.gap.from,i,r),e.from.line),this.gap.to=Math.max(o(this.gap.to,i,r),e.from.line)):this.gap={from:e.from.line,to:a+1},r)for(var s=0;s<this.matches.length;s++){var n=this.matches[s],h=o(n.from.line,i,r);h!=n.from.line&&(n.from=t.Pos(h,n.from.ch));var c=o(n.to.line,i,r);c!=n.to.line&&(n.to=t.Pos(c,n.to.ch))}clearTimeout(this.update);var f=this;this.update=setTimeout(function(){f.updateAfterChange()},250)},e.prototype.updateAfterChange=function(){this.findMatches(),this.annotation.update(this.matches)},e.prototype.clear=function(){this.cm.off("change",this.changeHandler),this.annotation.clear()}});